package org.piaohao.redisManager;

import cn.hutool.core.convert.Convert;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import lombok.Data;
import org.piaohao.redisManager.table.TableData;
import org.piaohao.redisManager.table.TableInit;

import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.List;

@Data
public class TablePanel<T> {
    private JPanel paginationPanel;
    private JButton firstPageBtn;
    private JButton prePageBtn;
    private JLabel pageInfoLabel;
    private JTextField pageField;
    private JButton nextPageBtn;
    private JButton lastPageBtn;
    private JPanel rootPanel;
    private JTable table;
    private JScrollPane tableScrollPanel;

    private TableData<T> tableData;
    private Component parentWindow;
    private TableInit<T> tableInit;

    public TablePanel(Component parentWindow, TableData<T> tableData, TableInit<T> tableInit) {
        this.tableData = tableData;
        this.parentWindow = parentWindow;
        this.tableInit = tableInit;

        $$$setupUI$$$();
        firstPageBtn.addActionListener(e -> paginate(1));
        lastPageBtn.addActionListener(e -> paginate(tableData.getPageCount()));
        prePageBtn.addActionListener(e -> paginate(tableData.getCurrentPage() - 1));
        nextPageBtn.addActionListener(e -> paginate(tableData.getCurrentPage() + 1));

        paginate(1);
    }

    private void createUIComponents() {
        {
            pageField = new JTextField();
            pageField.addKeyListener(new KeyAdapter() {
                @Override
                public void keyTyped(KeyEvent e) {
                    int keyChar = e.getKeyChar();
                    if (keyChar >= KeyEvent.VK_0 && keyChar <= KeyEvent.VK_9) {

                    } else {
                        e.consume(); //关键，屏蔽掉非法输入
                    }

                }

                @Override
                public void keyPressed(KeyEvent e) {
                    if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                        if (tableData == null) {
                            return;
                        }
                        Integer pageNo = Convert.toInt(pageField.getText());
                        if (pageNo > tableData.getPageCount()) {
                            pageNo = tableData.getPageCount();
                        } else if (pageNo < 1) {
                            pageNo = 1;
                        }
                        paginate(pageNo);
                        pageField.setText(pageNo + "");
                    }
                }
            });
        }
    }

    private void paginate(int pageNo) {
        List<T> rows = tableData.getPageData(pageNo);
        tableInit.init(table, rows);
        tableData.setCurrentPage(pageNo);
        pageField.setText(pageNo + "");
        pageInfoLabel.setText("页,共" + tableData.getPageCount() + "页");
    }

    public void refresh() {
        tableData = tableInit.refresh();
        paginate(1);
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        rootPanel = new JPanel();
        rootPanel.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        paginationPanel = new JPanel();
        paginationPanel.setLayout(new GridLayoutManager(1, 6, new Insets(5, 5, 5, 5), -1, -1));
        rootPanel.add(paginationPanel, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        firstPageBtn = new JButton();
        firstPageBtn.setText("首页");
        paginationPanel.add(firstPageBtn, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        prePageBtn = new JButton();
        prePageBtn.setText("上一页");
        paginationPanel.add(prePageBtn, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        paginationPanel.add(panel1, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("第");
        panel1.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        pageInfoLabel = new JLabel();
        pageInfoLabel.setText("页,共0页");
        panel1.add(pageInfoLabel, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        pageField.setText("0");
        panel1.add(pageField, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(100, -1), null, 0, false));
        nextPageBtn = new JButton();
        nextPageBtn.setText("下一页");
        paginationPanel.add(nextPageBtn, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        lastPageBtn = new JButton();
        lastPageBtn.setText("尾页");
        paginationPanel.add(lastPageBtn, new GridConstraints(0, 4, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        paginationPanel.add(spacer1, new GridConstraints(0, 5, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        tableScrollPanel = new JScrollPane();
        rootPanel.add(tableScrollPanel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        table = new JTable();
        tableScrollPanel.setViewportView(table);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }
}
